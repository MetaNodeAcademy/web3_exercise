{
  "address": "0xC732975518161ac846C0A804cBF141D6DF2C6723",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x6664da68f79aa3f0ce197079e5386c9d437ef55d72f0346729f33c71ace04e32",
  "receipt": {
    "to": null,
    "from": "0x365a8b3f57A650DE13f145263E3a5B40c43d3bCd",
    "contractAddress": "0xC732975518161ac846C0A804cBF141D6DF2C6723",
    "transactionIndex": 45,
    "gasUsed": "1399610",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x27e799999c1f4f6924c9d9b7be03bc3eb1e56e0fe2ace5d14ccdf133ef1dc2c4",
    "transactionHash": "0x6664da68f79aa3f0ce197079e5386c9d437ef55d72f0346729f33c71ace04e32",
    "logs": [],
    "blockNumber": 9008249,
    "cumulativeGasUsed": "9531866",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "MyToken",
    "MTK"
  ],
  "numDeployments": 1,
  "solcInputHash": "c5b7288822b5e3f8b386043ba23fd809",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"}},\"stateVariables\":{\"totalSupply\":{\"details\":\"Returns the amount of tokens in existence.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CA_ERC20.sol\":\"CA_ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CA_ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\\ncontract CA_ERC20 is IERC20 {\\n    string public name;\\n    string public symbol;\\n    uint8 public decimals = 18;\\n    uint256 public totalSupply;\\n\\n    mapping(address => uint256) public balances;\\n    mapping(address => mapping(address => uint256)) public allowances;\\n\\n    address public owner;\\n\\n    modifier onlyOwner() {\\n        require(msg.sender == owner, \\\"Only owner can call this function\\\");\\n        _;\\n    }\\n\\n    constructor(string memory _name, string memory _symbol) {\\n        name = _name;\\n        symbol = _symbol;\\n        owner = msg.sender;\\n    }\\n\\n    function balanceOf(address account) external view override returns (uint256) {\\n        return balances[account];\\n    }\\n\\n    function transfer(address recipient, uint256 amount) external override returns (bool) {\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n        require(balances[msg.sender] >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        \\n        balances[msg.sender] -= amount;\\n        balances[recipient] += amount;\\n        \\n        emit Transfer(msg.sender, recipient, amount);\\n        \\n        return true;\\n    }\\n\\n    function allowance(address _owner, address spender) external view override returns (uint256) {\\n        return allowances[_owner][spender];\\n    }\\n\\n    function approve(address spender, uint256 amount) external override returns (bool) {\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n        \\n        allowances[msg.sender][spender] = amount;\\n        \\n        emit Approval(msg.sender, spender, amount);\\n        \\n        return true;\\n    }\\n\\n    function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n        require(balances[sender] >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        require(allowances[sender][msg.sender] >= amount, \\\"ERC20: transfer amount exceeds allowance\\\");\\n\\n        balances[sender] -= amount;\\n        balances[recipient] += amount;\\n        allowances[sender][msg.sender] -= amount;\\n        \\n        emit Transfer(sender, recipient, amount);\\n        \\n        return true;\\n    }\\n\\n    function mint(address to, uint256 amount) external onlyOwner {\\n        require(to != address(0), \\\"ERC20: mint to the zero address\\\");\\n        \\n        totalSupply += amount;\\n        balances[to] += amount;\\n        \\n        emit Transfer(address(0), to, amount);\\n    }\\n}\\n\",\"keccak256\":\"0x8e10b5c5836347d8ae37de311a3b00963457cb3626eb9397200a3baddfb06a83\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040526012600260006101000a81548160ff021916908360ff1602179055503480156200002d57600080fd5b5060405162001c7d38038062001c7d833981810160405281019062000053919062000253565b816000908162000064919062000523565b50806001908162000076919062000523565b5033600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506200060a565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200012982620000de565b810181811067ffffffffffffffff821117156200014b576200014a620000ef565b5b80604052505050565b600062000160620000c0565b90506200016e82826200011e565b919050565b600067ffffffffffffffff821115620001915762000190620000ef565b5b6200019c82620000de565b9050602081019050919050565b60005b83811015620001c9578082015181840152602081019050620001ac565b60008484015250505050565b6000620001ec620001e68462000173565b62000154565b9050828152602081018484840111156200020b576200020a620000d9565b5b62000218848285620001a9565b509392505050565b600082601f830112620002385762000237620000d4565b5b81516200024a848260208601620001d5565b91505092915050565b600080604083850312156200026d576200026c620000ca565b5b600083015167ffffffffffffffff8111156200028e576200028d620000cf565b5b6200029c8582860162000220565b925050602083015167ffffffffffffffff811115620002c057620002bf620000cf565b5b620002ce8582860162000220565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200032b57607f821691505b602082108103620003415762000340620002e3565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003ab7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200036c565b620003b786836200036c565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600062000404620003fe620003f884620003cf565b620003d9565b620003cf565b9050919050565b6000819050919050565b6200042083620003e3565b620004386200042f826200040b565b84845462000379565b825550505050565b600090565b6200044f62000440565b6200045c81848462000415565b505050565b5b8181101562000484576200047860008262000445565b60018101905062000462565b5050565b601f821115620004d3576200049d8162000347565b620004a8846200035c565b81016020851015620004b8578190505b620004d0620004c7856200035c565b83018262000461565b50505b505050565b600082821c905092915050565b6000620004f860001984600802620004d8565b1980831691505092915050565b6000620005138383620004e5565b9150826002028217905092915050565b6200052e82620002d8565b67ffffffffffffffff8111156200054a5762000549620000ef565b5b62000556825462000312565b6200056382828562000488565b600060209050601f8311600181146200059b576000841562000586578287015190505b62000592858262000505565b86555062000602565b601f198416620005ab8662000347565b60005b82811015620005d557848901518255600182019150602085019450602081019050620005ae565b86831015620005f55784890151620005f1601f891682620004e5565b8355505b6001600288020188555050505b505050505050565b611663806200061a6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806340c10f191161008c5780638da5cb5b116100665780638da5cb5b1461023a57806395d89b4114610258578063a9059cbb14610276578063dd62ed3e146102a6576100cf565b806340c10f19146101be57806355b6ed5c146101da57806370a082311461020a576100cf565b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461012257806323b872dd1461014057806327e235e314610170578063313ce567146101a0575b600080fd5b6100dc6102d6565b6040516100e99190610ee2565b60405180910390f35b61010c60048036038101906101079190610f9d565b610364565b6040516101199190610ff8565b60405180910390f35b61012a6104c4565b6040516101379190611022565b60405180910390f35b61015a6004803603810190610155919061103d565b6104ca565b6040516101679190610ff8565b60405180910390f35b61018a60048036038101906101859190611090565b610899565b6040516101979190611022565b60405180910390f35b6101a86108b1565b6040516101b591906110d9565b60405180910390f35b6101d860048036038101906101d39190610f9d565b6108c4565b005b6101f460048036038101906101ef91906110f4565b610a9c565b6040516102019190611022565b60405180910390f35b610224600480360381019061021f9190611090565b610ac1565b6040516102319190611022565b60405180910390f35b610242610b0a565b60405161024f9190611143565b60405180910390f35b610260610b30565b60405161026d9190610ee2565b60405180910390f35b610290600480360381019061028b9190610f9d565b610bbe565b60405161029d9190610ff8565b60405180910390f35b6102c060048036038101906102bb91906110f4565b610dcb565b6040516102cd9190611022565b60405180910390f35b600080546102e39061118d565b80601f016020809104026020016040519081016040528092919081815260200182805461030f9061118d565b801561035c5780601f106103315761010080835404028352916020019161035c565b820191906000526020600020905b81548152906001019060200180831161033f57829003601f168201915b505050505081565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036103d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103cb90611230565b60405180910390fd5b81600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516104b29190611022565b60405180910390a36001905092915050565b60035481565b60008073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361053a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610531906112c2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036105a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a090611354565b60405180910390fd5b81600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561062b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610622906113e6565b60405180910390fd5b81600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156106ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e190611478565b60405180910390fd5b81600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461073991906114c7565b9250508190555081600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461078f91906114fb565b9250508190555081600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461082291906114c7565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516108869190611022565b60405180910390a3600190509392505050565b60046020528060005260406000206000915090505481565b600260009054906101000a900460ff1681565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610954576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094b906115a1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ba9061160d565b60405180910390fd5b80600360008282546109d591906114fb565b9250508190555080600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a2b91906114fb565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610a909190611022565b60405180910390a35050565b6005602052816000526040600020602052806000526040600020600091509150505481565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60018054610b3d9061118d565b80601f0160208091040260200160405190810160405280929190818152602001828054610b699061118d565b8015610bb65780601f10610b8b57610100808354040283529160200191610bb6565b820191906000526020600020905b815481529060010190602001808311610b9957829003601f168201915b505050505081565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c2e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2590611354565b60405180910390fd5b81600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610cb0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca7906113e6565b60405180910390fd5b81600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610cff91906114c7565b9250508190555081600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d5591906114fb565b925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610db99190611022565b60405180910390a36001905092915050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610e8c578082015181840152602081019050610e71565b60008484015250505050565b6000601f19601f8301169050919050565b6000610eb482610e52565b610ebe8185610e5d565b9350610ece818560208601610e6e565b610ed781610e98565b840191505092915050565b60006020820190508181036000830152610efc8184610ea9565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f3482610f09565b9050919050565b610f4481610f29565b8114610f4f57600080fd5b50565b600081359050610f6181610f3b565b92915050565b6000819050919050565b610f7a81610f67565b8114610f8557600080fd5b50565b600081359050610f9781610f71565b92915050565b60008060408385031215610fb457610fb3610f04565b5b6000610fc285828601610f52565b9250506020610fd385828601610f88565b9150509250929050565b60008115159050919050565b610ff281610fdd565b82525050565b600060208201905061100d6000830184610fe9565b92915050565b61101c81610f67565b82525050565b60006020820190506110376000830184611013565b92915050565b60008060006060848603121561105657611055610f04565b5b600061106486828701610f52565b935050602061107586828701610f52565b925050604061108686828701610f88565b9150509250925092565b6000602082840312156110a6576110a5610f04565b5b60006110b484828501610f52565b91505092915050565b600060ff82169050919050565b6110d3816110bd565b82525050565b60006020820190506110ee60008301846110ca565b92915050565b6000806040838503121561110b5761110a610f04565b5b600061111985828601610f52565b925050602061112a85828601610f52565b9150509250929050565b61113d81610f29565b82525050565b60006020820190506111586000830184611134565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806111a557607f821691505b6020821081036111b8576111b761115e565b5b50919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b600061121a602283610e5d565b9150611225826111be565b604082019050919050565b600060208201905081810360008301526112498161120d565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006112ac602583610e5d565b91506112b782611250565b604082019050919050565b600060208201905081810360008301526112db8161129f565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b600061133e602383610e5d565b9150611349826112e2565b604082019050919050565b6000602082019050818103600083015261136d81611331565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006113d0602683610e5d565b91506113db82611374565b604082019050919050565b600060208201905081810360008301526113ff816113c3565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b6000611462602883610e5d565b915061146d82611406565b604082019050919050565b6000602082019050818103600083015261149181611455565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006114d282610f67565b91506114dd83610f67565b92508282039050818111156114f5576114f4611498565b5b92915050565b600061150682610f67565b915061151183610f67565b925082820190508082111561152957611528611498565b5b92915050565b7f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f60008201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b600061158b602183610e5d565b91506115968261152f565b604082019050919050565b600060208201905081810360008301526115ba8161157e565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b60006115f7601f83610e5d565b9150611602826115c1565b602082019050919050565b60006020820190508181036000830152611626816115ea565b905091905056fea26469706673582212209896550e30053cd15eb6442e1dc2ff40e94081b1e2072771ac63ba6ff81e682264736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100cf5760003560e01c806340c10f191161008c5780638da5cb5b116100665780638da5cb5b1461023a57806395d89b4114610258578063a9059cbb14610276578063dd62ed3e146102a6576100cf565b806340c10f19146101be57806355b6ed5c146101da57806370a082311461020a576100cf565b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461012257806323b872dd1461014057806327e235e314610170578063313ce567146101a0575b600080fd5b6100dc6102d6565b6040516100e99190610ee2565b60405180910390f35b61010c60048036038101906101079190610f9d565b610364565b6040516101199190610ff8565b60405180910390f35b61012a6104c4565b6040516101379190611022565b60405180910390f35b61015a6004803603810190610155919061103d565b6104ca565b6040516101679190610ff8565b60405180910390f35b61018a60048036038101906101859190611090565b610899565b6040516101979190611022565b60405180910390f35b6101a86108b1565b6040516101b591906110d9565b60405180910390f35b6101d860048036038101906101d39190610f9d565b6108c4565b005b6101f460048036038101906101ef91906110f4565b610a9c565b6040516102019190611022565b60405180910390f35b610224600480360381019061021f9190611090565b610ac1565b6040516102319190611022565b60405180910390f35b610242610b0a565b60405161024f9190611143565b60405180910390f35b610260610b30565b60405161026d9190610ee2565b60405180910390f35b610290600480360381019061028b9190610f9d565b610bbe565b60405161029d9190610ff8565b60405180910390f35b6102c060048036038101906102bb91906110f4565b610dcb565b6040516102cd9190611022565b60405180910390f35b600080546102e39061118d565b80601f016020809104026020016040519081016040528092919081815260200182805461030f9061118d565b801561035c5780601f106103315761010080835404028352916020019161035c565b820191906000526020600020905b81548152906001019060200180831161033f57829003601f168201915b505050505081565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036103d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103cb90611230565b60405180910390fd5b81600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516104b29190611022565b60405180910390a36001905092915050565b60035481565b60008073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361053a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610531906112c2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036105a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a090611354565b60405180910390fd5b81600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561062b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610622906113e6565b60405180910390fd5b81600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156106ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e190611478565b60405180910390fd5b81600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461073991906114c7565b9250508190555081600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461078f91906114fb565b9250508190555081600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461082291906114c7565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516108869190611022565b60405180910390a3600190509392505050565b60046020528060005260406000206000915090505481565b600260009054906101000a900460ff1681565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610954576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094b906115a1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ba9061160d565b60405180910390fd5b80600360008282546109d591906114fb565b9250508190555080600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a2b91906114fb565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610a909190611022565b60405180910390a35050565b6005602052816000526040600020602052806000526040600020600091509150505481565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60018054610b3d9061118d565b80601f0160208091040260200160405190810160405280929190818152602001828054610b699061118d565b8015610bb65780601f10610b8b57610100808354040283529160200191610bb6565b820191906000526020600020905b815481529060010190602001808311610b9957829003601f168201915b505050505081565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c2e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2590611354565b60405180910390fd5b81600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610cb0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca7906113e6565b60405180910390fd5b81600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610cff91906114c7565b9250508190555081600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d5591906114fb565b925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610db99190611022565b60405180910390a36001905092915050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610e8c578082015181840152602081019050610e71565b60008484015250505050565b6000601f19601f8301169050919050565b6000610eb482610e52565b610ebe8185610e5d565b9350610ece818560208601610e6e565b610ed781610e98565b840191505092915050565b60006020820190508181036000830152610efc8184610ea9565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f3482610f09565b9050919050565b610f4481610f29565b8114610f4f57600080fd5b50565b600081359050610f6181610f3b565b92915050565b6000819050919050565b610f7a81610f67565b8114610f8557600080fd5b50565b600081359050610f9781610f71565b92915050565b60008060408385031215610fb457610fb3610f04565b5b6000610fc285828601610f52565b9250506020610fd385828601610f88565b9150509250929050565b60008115159050919050565b610ff281610fdd565b82525050565b600060208201905061100d6000830184610fe9565b92915050565b61101c81610f67565b82525050565b60006020820190506110376000830184611013565b92915050565b60008060006060848603121561105657611055610f04565b5b600061106486828701610f52565b935050602061107586828701610f52565b925050604061108686828701610f88565b9150509250925092565b6000602082840312156110a6576110a5610f04565b5b60006110b484828501610f52565b91505092915050565b600060ff82169050919050565b6110d3816110bd565b82525050565b60006020820190506110ee60008301846110ca565b92915050565b6000806040838503121561110b5761110a610f04565b5b600061111985828601610f52565b925050602061112a85828601610f52565b9150509250929050565b61113d81610f29565b82525050565b60006020820190506111586000830184611134565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806111a557607f821691505b6020821081036111b8576111b761115e565b5b50919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b600061121a602283610e5d565b9150611225826111be565b604082019050919050565b600060208201905081810360008301526112498161120d565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006112ac602583610e5d565b91506112b782611250565b604082019050919050565b600060208201905081810360008301526112db8161129f565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b600061133e602383610e5d565b9150611349826112e2565b604082019050919050565b6000602082019050818103600083015261136d81611331565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006113d0602683610e5d565b91506113db82611374565b604082019050919050565b600060208201905081810360008301526113ff816113c3565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b6000611462602883610e5d565b915061146d82611406565b604082019050919050565b6000602082019050818103600083015261149181611455565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006114d282610f67565b91506114dd83610f67565b92508282039050818111156114f5576114f4611498565b5b92915050565b600061150682610f67565b915061151183610f67565b925082820190508082111561152957611528611498565b5b92915050565b7f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f60008201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b600061158b602183610e5d565b91506115968261152f565b604082019050919050565b600060208201905081810360008301526115ba8161157e565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b60006115f7601f83610e5d565b9150611602826115c1565b602082019050919050565b60006020820190508181036000830152611626816115ea565b905091905056fea26469706673582212209896550e30053cd15eb6442e1dc2ff40e94081b1e2072771ac63ba6ff81e682264736f6c63430008140033",
  "devdoc": {
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
      }
    },
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
      },
      "balanceOf(address)": {
        "details": "Returns the amount of tokens owned by `account`."
      }
    },
    "stateVariables": {
      "totalSupply": {
        "details": "Returns the amount of tokens in existence."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 81,
        "contract": "contracts/CA_ERC20.sol:CA_ERC20",
        "label": "name",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      },
      {
        "astId": 83,
        "contract": "contracts/CA_ERC20.sol:CA_ERC20",
        "label": "symbol",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 86,
        "contract": "contracts/CA_ERC20.sol:CA_ERC20",
        "label": "decimals",
        "offset": 0,
        "slot": "2",
        "type": "t_uint8"
      },
      {
        "astId": 88,
        "contract": "contracts/CA_ERC20.sol:CA_ERC20",
        "label": "totalSupply",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 92,
        "contract": "contracts/CA_ERC20.sol:CA_ERC20",
        "label": "balances",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 98,
        "contract": "contracts/CA_ERC20.sol:CA_ERC20",
        "label": "allowances",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 100,
        "contract": "contracts/CA_ERC20.sol:CA_ERC20",
        "label": "owner",
        "offset": 0,
        "slot": "6",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}